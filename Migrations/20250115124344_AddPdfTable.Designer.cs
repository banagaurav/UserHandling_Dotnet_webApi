// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserHandling.Data;

#nullable disable

namespace UserHandling.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250115124344_AddPdfTable")]
    partial class AddPdfTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UserHandling.Models.Pdf", b =>
                {
                    b.Property<int>("PdfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PdfId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PdfId");

                    b.ToTable("Pdfs");

                    b.HasData(
                        new
                        {
                            PdfId = 1,
                            Description = "A beginner's guide to C# programming.",
                            FilePath = "/pdfs/csharp_intro.pdf",
                            Title = "Introduction to C#"
                        },
                        new
                        {
                            PdfId = 2,
                            Description = "An advanced guide to C# programming.",
                            FilePath = "/pdfs/csharp_advanced.pdf",
                            Title = "Advanced C#"
                        },
                        new
                        {
                            PdfId = 3,
                            Description = "Learn about database management systems.",
                            FilePath = "/pdfs/dbms.pdf",
                            Title = "Database Management Systems"
                        },
                        new
                        {
                            PdfId = 4,
                            Description = "Fundamentals of web development using HTML, CSS, and JavaScript.",
                            FilePath = "/pdfs/web_development.pdf",
                            Title = "Web Development Basics"
                        },
                        new
                        {
                            PdfId = 5,
                            Description = "Introduction to mobile app development for iOS and Android.",
                            FilePath = "/pdfs/mobile_app_development.pdf",
                            Title = "Mobile App Development"
                        });
                });

            modelBuilder.Entity("UserHandling.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedAt = new DateTime(2025, 1, 15, 10, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@example.com",
                            Password = "AQAAAAIAAYagAAAAEHxN0mxOCfiAttACyI1yKUUQWhP8GFmuPIlJomy2KiT3PUCc9FulWr0Z+O40EzX88w==",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            CreatedAt = new DateTime(2025, 1, 15, 10, 5, 0, 0, DateTimeKind.Utc),
                            Email = "user1@example.com",
                            Password = "AQAAAAIAAYagAAAAEJF2vKWYctnUJ9ArEF6ESXhI4m/KzKeUOiV+iZiqJAPYmB+HVRx4hYOQNq8qYH+qXw==",
                            Role = "User",
                            Username = "user1"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
